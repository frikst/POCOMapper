using System;
using KST.POCOMapper.Mapping.Base;

namespace KST.POCOMapper.Executor
{
	public class MappingDebugInformation
	{
		private readonly MappingContainer aMappings;

		internal MappingDebugInformation(MappingContainer mappings)
		{
			this.aMappings = mappings;
		}

		/// <summary>
	    /// Returns source for compiled mapping.
	    /// </summary>
	    /// <typeparam name="TFrom">Class from the source model.</typeparam>
	    /// <typeparam name="TTo">Class from the destination model.</typeparam>
	    /// <returns>Source code, or null if no source code is generated by mapping</returns>
	    public string GetMappingSource<TFrom, TTo>()
	    {
		    return this.GetMappingSource(typeof(TFrom), typeof(TTo));
	    }

	    /// <summary>
	    /// Returns source for compiled mapping.
	    /// </summary>
	    /// <param name="from">Class from the source model.</param>
	    /// <param name="to">Class from the destination model.</param>
	    /// <returns>Source code, or null if no source code is generated by mapping</returns>
	    public string GetMappingSource(Type from, Type to)
		    => this.aMappings.GetMapping(from, to).MappingSource;

	    /// <summary>
	    /// Returns source for compiled synchronization.
	    /// </summary>
	    /// <typeparam name="TFrom">Class from the source model.</typeparam>
	    /// <typeparam name="TTo">Class from the destination model.</typeparam>
	    /// <returns>Source code, or null if no source code is generated by mapping</returns>
	    public string GetSynchronizationSource<TFrom, TTo>()
		    => this.GetSynchronizationSource(typeof(TFrom), typeof(TTo));

	    /// <summary>
	    /// Returns source for compiled synchronization.
	    /// </summary>
	    /// <param name="from">Class from the source model.</param>
	    /// <param name="to">Class from the destination model.</param>
	    /// <returns>Source code, or null if no source code is generated by mapping</returns>
	    public string GetSynchronizationSource(Type from, Type to)
		    => (this.aMappings.GetMapping(from, to) as IMappingWithSyncSupport)?.SynchronizationSource;
    }
}
